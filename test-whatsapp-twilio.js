const fetch = require('node-fetch');

// üîß CONFIGURACI√ìN R√ÅPIDA TWILIO
// Reemplaza con tus credenciales reales de Twilio

const TWILIO_CONFIG = {
    accountSid: 'TU_ACCOUNT_SID_AQUI',           // Empieza con AC...
    authToken: 'TU_AUTH_TOKEN_AQUI',             // 32 caracteres
    phoneNumber: '+14155238886',                  // N√∫mero Twilio Sandbox
    myWhatsApp: '+54911XXXXXXXX'                 // Tu n√∫mero WhatsApp
};

async function enviarMensajePrueba() {
    try {
        console.log('üì± Enviando mensaje de prueba WhatsApp...');
        
        // Verificar configuraci√≥n
        if (TWILIO_CONFIG.accountSid === 'TU_ACCOUNT_SID_AQUI') {
            console.log('‚ùå Por favor configura tus credenciales Twilio primero');
            console.log('üìù Edita este archivo y reemplaza:');
            console.log('   - TU_ACCOUNT_SID_AQUI con tu Account SID');
            console.log('   - TU_AUTH_TOKEN_AQUI con tu Auth Token');
            console.log('   - +54911XXXXXXXX con tu n√∫mero WhatsApp');
            return;
        }
        
        const mensaje = `üéâ ¬°PRUEBA EXITOSA!

Tu sistema de alertas MercadoPago est√° funcionando:

‚úÖ Servidor webhook: ACTIVO
‚úÖ ngrok tunnel: CONECTADO  
‚úÖ MercadoPago IPN: CONFIGURADO
‚úÖ WhatsApp Twilio: FUNCIONANDO

üöÄ Tu sistema est√° listo para notificaciones instant√°neas.

Fecha: ${new Date().toLocaleString('es-AR')}`;

        const auth = Buffer.from(`${TWILIO_CONFIG.accountSid}:${TWILIO_CONFIG.authToken}`).toString('base64');
        
        const response = await fetch(`https://api.twilio.com/2010-04-01/Accounts/${TWILIO_CONFIG.accountSid}/Messages.json`, {
            method: 'POST',
            headers: {
                'Authorization': `Basic ${auth}`,
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams({
                From: `whatsapp:${TWILIO_CONFIG.phoneNumber}`,
                To: `whatsapp:${TWILIO_CONFIG.myWhatsApp}`,
                Body: mensaje
            })
        });
        
        const responseText = await response.text();
        
        if (response.ok) {
            const data = JSON.parse(responseText);
            console.log('‚úÖ ¬°Mensaje enviado exitosamente!');
            console.log('üì± SID:', data.sid);
            console.log('üìû To:', data.to);
            console.log('üì§ Status:', data.status);
            console.log('üí∞ Price:', data.price || 'FREE');
            console.log('\nüéØ Verifica tu WhatsApp para ver el mensaje!');
        } else {
            console.log('‚ùå Error enviando mensaje:', response.status);
            console.log('Response:', responseText);
            
            try {
                const errorData = JSON.parse(responseText);
                if (errorData.code === 21211) {
                    console.log('\nüì± SOLUCI√ìN: Tu n√∫mero no est√° registrado en el Sandbox');
                    console.log('1. Env√≠a un mensaje a +1 415 523 8886');
                    console.log('2. Texto: "join <tu-sandbox-code>"');
                    console.log('3. El c√≥digo lo encuentras en console.twilio.com');
                }
            } catch {}
        }
        
    } catch (error) {
        console.error('‚ùå Error de conexi√≥n:', error.message);
        console.log('\nüîß Verifica:');
        console.log('1. Account SID correcto (empieza con AC)');
        console.log('2. Auth Token correcto (32 caracteres)');
        console.log('3. Conexi√≥n a internet');
    }
}

async function verificarCredenciales() {
    try {
        console.log('üîç Verificando credenciales Twilio...');
        
        const auth = Buffer.from(`${TWILIO_CONFIG.accountSid}:${TWILIO_CONFIG.authToken}`).toString('base64');
        
        const response = await fetch(`https://api.twilio.com/2010-04-01/Accounts/${TWILIO_CONFIG.accountSid}.json`, {
            headers: {
                'Authorization': `Basic ${auth}`
            }
        });
        
        if (response.ok) {
            const account = await response.json();
            console.log('‚úÖ Credenciales v√°lidas');
            console.log('üë§ Account:', account.friendly_name);
            console.log('üìß Email:', account.owner_account_sid);
            console.log('üåé Status:', account.status);
            console.log('üí∞ Balance:', account.balance || 'N/A');
            return true;
        } else {
            console.log('‚ùå Credenciales inv√°lidas:', response.status);
            return false;
        }
        
    } catch (error) {
        console.error('‚ùå Error verificando credenciales:', error.message);
        return false;
    }
}

async function main() {
    console.log('üöÄ === PRUEBA SISTEMA WHATSAPP TWILIO ===\n');
    
    const credencialesValidas = await verificarCredenciales();
    
    if (credencialesValidas) {
        console.log('\n' + '='.repeat(50) + '\n');
        await enviarMensajePrueba();
    }
    
    console.log('\nüìã INSTRUCCIONES R√ÅPIDAS:');
    console.log('1. Edita este archivo con tus credenciales Twilio');
    console.log('2. Activa WhatsApp Sandbox en console.twilio.com');
    console.log('3. Ejecuta: node test-whatsapp-twilio.js');
    console.log('4. ¬°Verifica tu WhatsApp!');
}

// Ejecutar si es llamado directamente
if (require.main === module) {
    main().catch(console.error);
}

module.exports = { enviarMensajePrueba, verificarCredenciales, TWILIO_CONFIG };